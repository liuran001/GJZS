<?xml version="1.0" encoding="utf-8"?>
<group title="应用管理">
<!-- START -->
    <action id="killapk3" confirm="true" interruptible="false">
        <title>强制性结束手机上所有第三方软件进程</title>
        <set>. ./Kill_APK.sh</set>
    </action>
<!-- END -->
<!-- START -->
    <action confirm="true" auto-off="true" interruptible="false">
        <title>修复淘宝闪退</title>
        <desc>清理优酷和淘宝下载的热更新文件，出现淘宝或优酷闪退的，可以试试</desc>
        <set>. ./app_simple.sh</set>
    </action>
<!-- END -->
<!-- START -->
    <action interruptible="false" auto-off="true">
        <title>查看/结束三方应用进程</title>
        <desc>查看哪些第三方应用在后台运行，选中即可结束运行</desc>
        <set>. ./Kill_APK-3.sh -k</set>
            <param name="package" type="app" multiple="true" options-sh=". ./Kill_APK-3.sh" />
    </action>
<!-- END -->
<!-- START -->
    <action auto-off="true" interruptible="false" visible="[[ -d &#34;$DATA_DIR/com.tencent.mobileqq&#34; ]] &#38;&#38; echo 1 || echo 0">
        <title>去除QQ个性化风格</title>
        <set>. ./QQ_Personalized_style_set.sh</set>
        <pages>
            <param name="Bubble" title="去除QQ聊天气泡" options-sh="printf 'false|默认\ntrue|禁用'" />
            <param name="Drop_Expression" title="去除聊天界面掉表情" options-sh="printf 'false|默认\ntrue|禁用'" />
            <param name="Font" title="去除字体特效" options-sh="printf 'false|默认\ntrue|禁用'" />
            <param name="Expression" title="去除表情推介" options-sh="printf 'false|默认\ntrue|禁用'" />
            <param name="Head_Pendant" title="去除头像挂件" options-sh="printf 'false|默认\ntrue|禁用'" />
        </pages>
    </action>
<!-- END -->
<!-- START -->
    <action auto-off="true1" interruptible="false" visible="[[ -d &#34;$DATA_DIR/top.trumeet.mipush&#34; ]] &#38;&#38; echo 1 || echo 0">
        <title>清空mipush注册信息</title>
        <desc>清空第三方mipush全部注册信息，注册异常时可使用，慎点</desc>
        <set>. ./mipush_clear.sh</set>
    </action>
<!-- END -->
<!-- START -->
    <action auto-off="true1" interruptible="false" visible="[[ -d &#34;$DATA_DIR/com.google.android.gsf&#34; ]] &#38;&#38; echo 1 || echo 0">
        <title>进入「Google设置」</title>
        <set>am start -n com.google.android.gms/.app.settings.GoogleSettingsLink &#38;&gt;/dev/null</set>
    </action>
<!-- END -->
<!-- START -->
    <switch auto-off="true" interruptible="false" id="Google_Service" visible=". ./support/Google_Service.sh">
        <title>Google服务</title>
        <desc>关闭此开关以临时禁用Google框架</desc>
        <get>. ./switchs/Google_Service_Get.sh</get>
        <set>. ./switchs/Google_Service_Set.sh</set>
    </switch>
<!-- END -->
</group>

<group title="安装包提取">
<!-- START -->
    <action interruptible="false">
        <title>提取系统应用</title>
        <set>. ./APK_Extraction.sh</set>
            <param name="luj" title="提取到的目录" desc="上面是默认路径，请根据自己需求自定义" value-sh="if [[ -f $Data_Dir/APK_Extraction_Format.log ]]; then grep_prop luj $Data_Dir/APK_Extraction_Format.log; else echo $GJZS/APK_Extraction; fi" />
            <param name="Format" title="选择名称格式" desc="${A}应用名称  ${V}版本名称&#x000A;${P}应用包名  ${C}版本号" value-sh="if [[ -f $Data_Dir/APK_Extraction_Format.log ]]; then grep_prop Format $Data_Dir/APK_Extraction_Format.log; else echo \${A}-\${V}; fi" />
            <param name="package" type="app" multiple="true" options-sh=". ./Get_Package_Name-s.sh" />
    </action>
<!-- END -->
<!-- START -->
    <action interruptible="false">
        <title>提取第三方应用</title>
        <set>. ./APK_Extraction.sh</set>
            <param name="luj" title="提取到的目录" desc="上面是默认路径，请根据自己需求自定义" value-sh="if [[ -f $Data_Dir/APK_Extraction_Format.log ]]; then grep_prop luj $Data_Dir/APK_Extraction_Format.log; else echo $GJZS/APK_Extraction; fi" />
            <param name="Format" title="选择名称格式" desc="${A}应用名称  ${V}版本名称&#x000A;${P}应用包名  ${C}版本号" value-sh="if [[ -f $Data_Dir/APK_Extraction_Format.log ]]; then grep_prop Format $Data_Dir/APK_Extraction_Format.log; else echo \${A}-\${V}; fi" />
            <param name="package" type="app" multiple="true" options-sh=". ./Get_Package_Name-3.sh" />
    </action>
<!-- END -->
<!-- START -->
    <action shell="hidden" confirm="true" auto-off="true" interruptible="false">
        <title>一键匹配包名对应的应用名称</title>
        <desc>扫描手机上已安装的所有软件，快速匹配包名对应的应用名称方便安装包提取。注：匹配一次永久生效，无需重复匹配，除非新安装了应用，方可再次匹配</desc>
        <set>. ./Get_Apk_Name.sh</set>
    </action>
<!-- END -->
</group>

<group title="安装应用">
<!-- START -->
    <action interruptible="false">
        <title>安装单个应用</title>
        <summary>支持apk/apks/xapk/apex文件</summary>
        <set>. ./install_apk.sh</set>
        <params>
            <param name="Delete_APK" label="是否安装成功后自动删除安装包" type="switch" />
            <param name="File" type="file" editable="true" required="true" title="可输入文件绝对路径，也可以使用文件选择器选择文件" desc="温馨提示：可用「MT管理器」长按目录或文件 -->点属性 -->点击目录即可复制目录绝对路径，长按目录或长按名称即可复制文件绝对路径" />
        </params>
    </action>
<!-- END -->
<!-- START -->
    <action interruptible="true">
        <title>批量静默安装某目录里的所有安装包</title>
        <desc>该功能会循环遍历指定目录里的所有APK，进行静默安装。</desc>
        <summary>支持apk/apks/xapk/apex文件</summary>
        <set>. ./Batch_installation.sh</set>
        <params>
            <param name="Search_Dir" label="搜索子目录下的模块？" type="checkbox" />
            <param name="Delete_APK" label="是否安装成功后自动删除安装包" type="switch" />
            <param name="log" label="同时打印安装日志到内部储存" type="switch" />
            <param name="File_Dir" title="可输入目录绝对路径，也可以通过文件选择器长按选定目录" type="folder" editable="true" required="true" desc="上面是默认路径，请自行根据需求更改目录，温馨提示：可用「MT管理器」长按目录或文件 -->点属性 -->点击目录即可复制目录绝对路径，长按目录或长按名称即可复制文件绝对路径" value-sh="Dir=$Data_Dir/Batch_installation.log; if [[ -f $Dir ]]; then cat $Dir; else echo $lu; fi " />
        </params>
    </action>
<!-- END -->
<!-- START -->
    <action auto-off="true">
        <title>伪装应用安装来源安装</title>
        <summary>支持apk/apks/xapk/apex文件</summary>
        <set>. ./install_apk.sh -s</set>
        <params>
            <param name="installer" title="请输入你要伪装的应用安装者包名" required="true" />
            <param name="File" type="file" editable="true" required="true" title="可输入文件绝对路径，也可以使用文件选择器选择文件" desc="温馨提示：可用「MT管理器」长按目录或文件 -->点属性 -->点击目录即可复制目录绝对路径，长按目录或长按名称即可复制文件绝对路径" />
        </params>
    </action>
<!-- END -->
</group>

<group title="查看冻结/冻结/恢复应用">
<!-- START -->
    <action interruptible="false">
        <title>冻结系统应用</title>
        <desc>把软件放入小黑屋，禁止运行</desc>
        <set>for i in $package; do pm disable-user $i; done</set>
            <param name="package" type="app" multiple="true" options-sh=". ./Get_Package_Name-s.sh" />
    </action>
<!-- END -->
<!-- START -->
    <action interruptible="false">
        <title>冻结第三方应用</title>
        <desc>把软件放入小黑屋，禁止运行</desc>
        <set>for i in $package; do pm disable-user $i; done</set>
            <param name="package" type="app" multiple="true" options-sh=". ./Get_Package_Name-3.sh" />
    </action>
<!-- END -->
<!-- START -->
    <action interruptible="false">
        <title>查看并恢复已冻结的应用①</title>
        <desc>默认勾选全部</desc>
        <set>for i in $package; do pm enable $i; done</set>
            <param name="package" type="app" multiple="true" options-sh=". ./Get_Package_Name-d.sh" value-sh=". ./Get_Package_Name-d.sh" />
    </action>
<!-- END -->
<!-- START -->
    <action interruptible="false">
        <title>查看并恢复已冻结的应用②</title>
        <desc>默认不勾选</desc>
        <set>for i in $package; do pm enable $i; done</set>
            <param name="package" type="app" multiple="true" options-sh=". ./Get_Package_Name-d.sh" />
    </action>
<!-- END -->
<!-- START -->
    <action auto-off="true">
        <title>自定义包名冻结、启用应用程序</title>
        <desc>用来冻结、启用（恢复）APK</desc>
        <set>if [[ -n $Freeze ]]; then for i in $Freeze; do pm disable-user $i; done; fi; if [[ -n $Enable ]]; then for o in $Enable; do pm enable $o; done; fi; sleep 1</set>
        <params>
            <param name="Freeze" title="请输入你要冻结的应用包名，多个包名请用输入法的回车键换行即可" />
            <param name="Enable" title="请输入你要启用（恢复）的应用包名，多个包名请用输入法的回车键换行即可" />
        </params>
    </action>
<!-- END -->
</group>
<group title="查看暂停/暂停/恢复应用">
<!-- START -->
    <action interruptible="false">
        <title>暂停系统应用</title>
        <desc>类似Scene的应用偏见，应用图标会变灰</desc>
        <set>for i in $package; do pm suspend $i; done</set>
            <param name="package" type="app" multiple="true" options-sh=". ./Get_Package_Name-s.sh" />
    </action>
<!-- END -->
<!-- START -->
    <action interruptible="false">
        <title>暂停第三方应用</title>
        <desc>类似Scene的应用偏见，应用图标会变灰</desc>
        <set>for i in $package; do pm suspend $i; done</set>
            <param name="package" type="app" multiple="true" options-sh=". ./Get_Package_Name-3.sh" />
    </action>
<!-- END -->
<!-- START -->
    <action interruptible="false">
        <title>查看并恢复已暂停的应用①</title>
        <desc>默认勾选全部</desc>
        <set>for i in $package; do pm unsuspend $i; done</set>
            <param name="package" type="app" multiple="true" options-sh=". ./Get_Package_Name-p.sh" value-sh=". ./Get_Package_Name-p.sh" />
    </action>
<!-- END -->
<!-- START -->
    <action interruptible="false">
        <title>查看并恢复已暂停的应用②</title>
        <desc>默认不勾选</desc>
        <set>for i in $package; do pm unsuspend $i; done</set>
            <param name="package" type="app" multiple="true" options-sh=". ./Get_Package_Name-p.sh" />
    </action>
<!-- END -->
<!-- START -->
    <action auto-off="true">
        <title>自定义包名暂停、恢复应用程序</title>
        <desc>用来暂停、启用（恢复）APK</desc>
        <set>if [[ -n $Suspend ]]; then for i in $Suspend; do pm suspend $i; done; fi; if [[ -n $Enable ]]; then for o in $Enable; do pm unsuspend $o; done; fi; sleep 1</set>
        <params>
            <param name="Suspend" title="请输入你要暂停的应用包名，多个包名请用输入法的回车键换行即可" />
            <param name="Enable" title="请输入你要启用（恢复）的应用包名，多个包名请用输入法的回车键换行即可" />
        </params>
    </action>
<!-- END -->
</group>
<group title="卸载/恢复应用">
<!-- START -->
    <action interruptible="false">
        <title>自选方式卸载第三方应用①</title>
        <desc>用来卸载APK、无法恢复，请自行承担风险！</desc>
        <set>for i in $package; do pm uninstall --user 0 $i; done</set>
            <param name="package" type="app" multiple="true" options-sh=". ./Get_Package_Name-3.sh" />
    </action>
<!-- END -->
<!-- START -->
    <action interruptible="false">
        <title>自选方式卸载第三方应用②（保留用户数据卸载）</title>
        <desc>用来卸载APK、无法恢复，请自行承担风险！</desc>
        <set>for i in $package; do pm uninstall -k --user 0 $i; done</set>
            <param name="package" type="app" multiple="true" options-sh=". ./Get_Package_Name-3.sh" />
    </action>
<!-- END -->
<!-- START -->
    <action interruptible="false">
        <title>自选方式卸载系统应用①</title>
        <desc>用来卸载APK、无法恢复，请自行承担风险！</desc>
        <set>for i in $package; do pm uninstall --user 0 $i; done</set>
            <param name="package" type="app" multiple="true" options-sh=". ./Get_Package_Name-s.sh" />
    </action>
<!-- END -->
<!-- START -->
    <action interruptible="false">
        <title>自选方式卸载系统应用②（保留用户数据卸载）</title>
        <desc>用来卸载APK、无法恢复，请自行承担风险！</desc>
        <set>for i in $package; do pm uninstall -k --user 0 $i; done</set>
            <param name="package" type="app" multiple="true" options-sh=". ./Get_Package_Name-s.sh" />
    </action>
<!-- END -->
<!-- START -->
    <action auto-off="true">
        <title>自定义指定包名卸载任意应用程序（包括预装APK）</title>
        <desc>用来卸载APK、无法恢复，请自行承担风险！</desc>
        <set>for i in $uninstall_apk; do if [[ $k = 1 ]]; then pm uninstall -k --user 0 $i; else pm uninstall --user 0 $i; fi; done</set>
        <params>
            <param name="k" label="保留用户数据卸载" type="checkbox" />
            <param name="uninstall_apk" title="请输入你要卸载的应用包名，无法恢复，请自行承担风险！多个包名请用输入法的回车键换行即可" required="true" />
        </params>
    </action>
<!-- END -->
<!-- START -->
    <action confirm="true">
        <title>卸载所有系统软件更新</title>
        <desc>删除对所有系统应用程序的更新，并回退到系统自带的版本（不包括data软件）</desc>
        <set>pm uninstall-system-updates</set>
    </action>
<!-- END -->
<!-- START -->
    <action interruptible="false">
        <title>自选方式恢复已卸载过系统应用apk①</title>
        <desc>查看已卸载的系统应用包名(没有卸载过则显示为空列表)，默认勾选全部，点执行即可恢复</desc>
        <set>. ./Uninstalled_apk_Recover.sh</set>
            <param name="package" type="packages" multiple="true" options-sh=". ./Uninstalled_apk_Get.sh" value-sh="cat $Data_Dir/Uninstalled_apk.log" />
    </action>
<!-- END -->
<!-- START -->
    <action interruptible="false">
        <title>自选方式恢复已卸载过系统应用apk②</title>
        <desc>查看已卸载的系统应用包名(没有卸载过则显示为空列表)，默认不勾选，自选勾选后点执行即可恢复</desc>
        <set>. ./Uninstalled_apk_Recover.sh</set>
            <param name="package" type="packages" multiple="true" options-sh=". ./Uninstalled_apk_Get.sh" />
    </action>
<!-- END -->
<!-- START -->
    <action>
        <title>自定义恢复已卸载的系统应用</title>
        <desc>用于恢复不小心卸载的系统应用</desc>
        <set>for i in $apk; do pm install-existing --user 0 ${i}; done</set>
        <params>
            <param name="apk" title="请输入应用包名，多个包名请用输入法的回车键换行即可" required="true"></param>
        </params>
    </action>
<!-- END -->
</group>
<group title="隐藏/恢复应用">
<!-- START -->
    <action interruptible="false">
        <title>隐藏系统应用</title>
        <desc>把软件隐藏起来，隐藏后不再出现图标</desc>
        <set>. ./Hide_app2.sh</set>
            <param name="package" type="app" multiple="true" options-sh=". ./Get_Package_Name-s.sh" />
    </action>
<!-- END -->
<!-- START -->
    <action interruptible="false">
        <title>隐藏第三方应用</title>
        <desc>把软件隐藏起来，隐藏后不再出现图标</desc>
        <set>. ./Hide_app2.sh</set>
            <param name="package" type="app" multiple="true" options-sh=". ./Get_Package_Name-3.sh" />
    </action>
<!-- END -->
<!-- START -->
    <action interruptible="false">
        <title>自选方式恢复已隐藏过的应用apk①</title>
        <desc>查看已隐藏的应用包名(没有隐藏过则显示为空列表)，默认勾选全部，点执行即可恢复</desc>
        <set>. ./Hidden_app_Records_Recover.sh</set>
            <param name="package" type="packages" multiple="true" options-sh="cat $Data_Dir/Hidden_app_Records.log" value-sh="cat $Data_Dir/Hidden_app_Records.log" />
    </action>
<!-- END -->
<!-- START -->
    <action interruptible="false">
        <title>自选方式恢复已隐藏过的应用apk②</title>
        <desc>查看已隐藏的应用包名(没有隐藏过则显示为空列表)，默认不勾选，点执行即可恢复</desc>
        <set>. ./Hidden_app_Records_Recover.sh</set>
            <param name="package" type="packages" multiple="true" options-sh="cat $Data_Dir/Hidden_app_Records.log" />
    </action>
<!-- END -->
<!-- START -->
    <action auto-off="true">
        <title>自定义隐藏、恢复应用程序</title>
        <desc>用来隐藏、（恢复）你的小秘密APK</desc>
        <set>. ./Hide_app.sh</set>
        <params>
            <param name="hide" title="请输入你要隐藏的应用包名，多个包名请用输入法的回车键换行即可" />
            <param name="unhide" title="请输入你要恢复的应用包名，多个包名请用输入法的回车键换行即可" />
        </params>
    </action>
<!-- END -->
</group>
<group title="管理应用程序（APK）">
<!-- START -->
    <action auto-off="true">
        <title>自定义包名强制结束应用程序</title>
        <desc>目前只支持包名启动，输入应用名称也可以执行以后再说吧！</desc>
        <set>echo "您输入了$kill1包名"; echo ; echo 结果如下; am force-stop $kill1</set>
        <params>
            <param name="kill1" title="请输入你要强制结束的应用包名，目前不支持支持直接输入应用名字杀死该应用程序" />
        </params>
    </action>
<!-- END -->
<!-- START -->
    <action auto-off="true">
        <title>自定义包名删除与包相关的所有数据：清除全部数据和缓存</title>
        <desc>只支持包名：删除与包名相关的所有数据：清除全部数据与缓存</desc>
        <set>echo "您输入了$clear1包名"; echo ; echo 结果如下; pm clear $clear1; sleep 2</set>
        <params>
            <param name="clear1" title="请输入你要清理清除全部数据与缓存的应用包名，" />
        </params>
    </action>
<!-- END -->
<!-- START -->
    <action auto-off="true">
        <title>自定义包名启动应用程序</title>
        <desc>目前只支持包名启动，输入应用名称也可以执行以后再说吧！</desc>
        <set>echo "您输入了$Enable_APK包名"; echo ; echo 结果如下; sleep 1.5; monkey -p $Enable_APK -c android.intent.category.LAUNCHER 1</set>
        <params>
            <param name="Enable_APK" title="请输入你要启动的应用包名，目前不支持支持直接输入应用名字启动" />
        </params>
    </action>
<!-- END -->
</group>
<group title="查看应用程序（APK）相关信息">
<!-- START -->
    <action confirm="true" interruptible="false">
        <title>当前单个应用程序的最大内存限制</title>
        <set>getprop dalvik.vm.heapgrowthlimit</set>
    </action>
<!-- END -->
<!-- START -->
    <action confirm="true" interruptible="false">
        <title>列出手机上当前可用的应用包名</title>
        <desc>列出所有可用应用（不包括冻结与隐藏的），仅显示可用的应用，结果格式［包名］</desc>
        <set>appinfo -e | awk -F'"' '{print $1}'</set>
    </action>
<!-- END -->
<!-- START -->
    <action confirm="true" interruptible="false">
        <title>查看手机上所有包名</title>
        <desc>查看结果格式［包名］</desc>
        <set>appinfo -a | awk -F'"' '{print $1}'</set>
    </action>
<!-- END -->
<!-- START -->
    <action confirm="true" interruptible="false">
        <title>查看手机上第三方应用包名</title>
        <desc>查看结果格式［包名］</desc>
        <set>appinfo -3 | awk -F'"' '{print $1}'</set>
    </action>
<!-- END -->
<!-- START -->
    <action confirm="true" interruptible="false">
        <title>查看手机上系统应用包名</title>
        <desc>结果格式［包名］</desc>
        <set>appinfo -s | awk -F'"' '{print $1}'</set>
    </action>
<!-- END -->
<!-- START -->
    <action confirm="true" interruptible="false">
        <title>查看手机上所有包名（包含路径）</title>
        <desc>结果格式［package：安装路径=包名］</desc>
        <set>pm list packages -f</set>
    </action>
<!-- END -->
<!-- START -->
    <action confirm="true" interruptible="false">
        <title>查看手机上第三方应用包名（包含路径）</title>
        <desc>结果格式［package：安装路径=包名］</desc>
        <set>pm list packages -3 -f</set>
    </action>
<!-- END -->
<!-- START -->
    <action confirm="true" interruptible="false">
        <title>查看手机上系统应用包名（包含路径）</title>
        <desc>结果格式［package：安装路径=包名］</desc>
        <set>pm list packages -s -f</set>
    </action>
<!-- END -->
<!-- START -->
    <action confirm="true" interruptible="false">
        <title>查看手机上所有应用信息</title>
        <desc>查看结果格式［PID 应用名 包名］</desc>
        <set>appinfo -a | awk -F'"' '{print $2 " " $4 " " $1}'</set>
    </action>
<!-- END -->
<!-- START -->
    <action confirm="true" interruptible="false">
        <title>查看手机上所有第三方应用信息</title>
        <desc>查看结果格式［PID 应用名 包名］</desc>
        <set>appinfo -3 | awk -F'"' '{print $2 " " $4 " " $1}'</set>
    </action>
<!-- END -->
<!-- START -->
    <action confirm="true" interruptible="false">
        <title>查看手机上所有系统应用信息</title>
        <desc>查看结果格式［PID 应用名 包名］</desc>
        <set>appinfo -s | awk -F'"' '{print $2 " " $4 " " $1}'</set>
    </action>
<!-- END -->
</group>
<group title="自定义使用关键字符串过滤来查看">
<!-- START -->
    <action>
        <title>自定义使用过滤来查看相关包名</title>
        <desc>输入关键字符串就可以过滤查看，结果格式为［package：安装路径］</desc>
        <set>echo "您输入了$SSS（关键字符串）"; echo ; echo 结果如下; pm list packages $SSS</set>
        <params>
            <param name="SSS" title="请输入包名关键字符来查看，例如输入：［qq］查找手机上所有qq相关的包名" readonly="false" />
        </params>
    </action>
<!-- END -->
</group>
<group title="自定义查看应用程序（APK）相关信息">
<!-- START -->
    <action>
        <title>自定义指定包名查看应用包安装路径</title>
        <desc>只支持输入包名查看，结果格式为［package：安装路径］</desc>
        <set>echo "您输入了$View_APK包名"; echo ; echo 结果如下; pm path "$View_APK"</set>
        <params>
            <param name="View_APK" title="请输入包名来查看安装路径" />
        </params>
    </action>
<!-- END -->
<!-- START -->
    <action>
        <title>自定义指定包名查看应用包安装路径（含当前输入包名）</title>
        <desc>只支持输入包名查看，结果格式为［package：安装路径=已输入的包名］</desc>
        <set>echo "您输入了$View_APK2包名"; echo ; echo 结果如下; pm list packages -f "$View_APK2"</set>
        <params>
            <param name="View_APK2" title="请输入包名来查看安装路径" />
        </params>
    </action>
<!-- END -->
<!-- START -->
    <action>
        <title>自定义指定包名查看［查看包名安装应用信息］</title>
        <desc>只支持输入包名查看</desc>
        <set>echo "您输入了$View_APK3包名"; echo ; echo 结果如下; dumpsys package "$View_APK3"</set>
        <params>
            <param name="View_APK3" title="请输入包名来包名安装应用信息" />
        </params>
    </action>
<!-- END -->
<!-- START -->
    <action>
        <title>自定义指定包名查看应用包全部详细信息</title>
        <desc>只支持输入包名查看</desc>
        <set>echo "您输入了$View_APK4包名"; echo ; echo 结果如下; pm dump "$View_APK4"</set>
        <params>
            <param name="View_APK4" title="请输入包名来查看安装包所有详细信息" />
        </params>
    </action>
<!-- END -->
<!-- START -->
    <action>
        <title>自定义指定包名查看该应用的电量消耗情况</title>
        <desc>只支持输入包名查看</desc>
        <set>echo "您输入了$View_APK5包名"; echo ; echo 结果如下; dumpsys batterystats $View_APK5</set>
        <params>
            <param name="View_APK5" title="请输入包名来查看该应用的电量消耗情况" />
        </params>
    </action>
<!-- END -->
</group>